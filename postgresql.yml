---
# playbooks/postgresql.yml
# ansible-playbook playbooks/postgresql.yml
- name: PostgreSQL Database Setup
  hosts: localhost
  connection: local
  vars:
    pg_databases:
      - name: wine_cellar
        owner: wine_cellar
        pass_path: "wine_cellar/db"  # Path in your pass store

  tasks:
    - name: Get database passwords from pass
      command: "pass {{ item.pass_path }}"
      register: db_passwords
      loop: "{{ pg_databases }}"
      become: false  # Run as your user, not root
      changed_when: false
      no_log: true   # Don't log the output which contains passwords
      failed_when: db_passwords.rc != 0


    - name: Install on Darwin
      when: ansible_os_family == "Darwin"
      block:
      # Working example on Darwin with homebrew
      # https://www.valerieparhamthompson.com/posts/provision-ansible-postgres/
      - name: Create PostgreSQL users
        community.postgresql.postgresql_user:
          login: "{{ ansible_user_id }}"
          db: postgres
          name: "{{ pg_databases[idx].owner }}"
          password: "{{ item.stdout }}"
          state: present
        loop: "{{ db_passwords.results }}"
        # no_log: true
        loop_control:
          index_var: idx

      - name: Create PostgreSQL databases
        community.postgresql.postgresql_db:
          login: "{{ ansible_user_id }}"
          name: "{{ item.name }}"
          owner: "{{ item.owner }}"
          state: present
        loop: "{{ pg_databases }}"


    - name: Install on Debian
      when: ansible_os_family == "Debian"
      become: true
      become_user: postgres
      block:
      - name: Create PostgreSQL users
        community.postgresql.postgresql_user:
          name: "{{ pg_databases[idx].owner }}"
          password: "{{ item.stdout }}"
          state: present
        loop: "{{ db_passwords.results }}"
        # no_log: true
        loop_control:
          index_var: idx

      - name: Create PostgreSQL databases
        community.postgresql.postgresql_db:
          name: "{{ item.name }}"
          owner: "{{ item.owner }}"
          state: present
        loop: "{{ pg_databases }}"

### Should be able to unify these with variables for become, become_user login...
